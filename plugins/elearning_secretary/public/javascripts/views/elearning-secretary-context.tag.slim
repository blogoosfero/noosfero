elearning-secretary-context

  button.grades-export.btn.btn-default.fa.fa-graduation-cap title="{es.t('views.students.grades_export')}" onclick='{exportGrades}'

  select.form-control onchange='{selectSubOrg}' onkeyup='{selectSubOrg}' if='{subOrganizations.length}'
    option each='{org in selectSubOrgs}' value='{org.id}'
      |{org.name}

  table.table.table-striped.table-hover
    thead
      tr
        th.bs-checkbox
        th
          |{es.t('views.students.name')}
        th
          |{es.t('views.students.actions')}
    tbody
      tr riot-tag='elearning-secretary-student' each='{student in students}' data='{student}' if='{!student.filtered}'

  javascript:
    this.es = window.elearning_secretary
    this.students = opts.students
    this.subOrganizations = opts.sub_organizations

    this.selectSubOrgs = opts.sub_organizations.slice(0)
    this.selectSubOrgs.unshift({name: this.es.t('views.sub_orgs.all')})
    this.selectedOrg = null

    selectSubOrg (e) {
      var id = parseInt($(e.target).val())
      for (var i in this.students) {
        var student = this.students[i]
        student.filtered = id && !_.includes(student.org_ids, id)
      }
      this.update()
    }

    selectedSubOrgs () {
      return this.selectedOrg ? [this.selectedOrg] : _.map(this.subOrganizations, function(o) { return o.id })
    }

    exportGrades () {
      var selected = _(this.students).select(function (s) { return !s.filtered && s.selected }).map(function (s) { return s.id }).value()
      if (!selected.length)
        selected = _(this.students).select(function (s) { return !s.filtered }).map(function (s) { return s.id }).value()
      var ids = selected.join(',')
      window.location.assign(this.es.routes.manage({profile: noosfero.profile, action: 'grades_export', student_ids: ids}))
    }

  scss:
    elearning-secretary-context {

      .bs-checkbox {
        text-align: center;
        vertical-align: middle;
        width: 36px;
      }

      .grades-export {
        float: right;
      }
    }


